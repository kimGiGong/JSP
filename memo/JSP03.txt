[JSP03]

1. 액션태그
	: 서버나 클라이언트에게 어떤 행동을 하도록 명력하는 태그
	페이지와 페이지사이 제어, 다른 페이지 실행결과를 현재 페이지에 포함,
	자반빈즈 등 다양한 기능 제공

	1) JSP 페이지 구성하는 태그 정리
		- 스크립트 태그 : 선언문 /스크립트릿 <% %> / 출력문 <%= %>
		- 주석 <%--   --%>
		-디렉티브 태그 <%@ page / include /tablib  %>
		- 액션태그 : <jsp : 태그명>
	
	2) 액션태그 종류
		forward 		: 다른페이지로 이동
		include		: 외부페이지 내용 포함.
		useBean		: 자바빈즈 설정
		setProperty	: 자바빈즈의 프로퍼티값 설정
		getProperty	: 자바빈즈의 프로퍼티값 가져오기
		param		: forward, include 등 액션태그에 파라미터 추가

		element
		attribute
		body
		text

2. forward 액션 태그
	: 다른페이지로 이동

	<jsp:forward page="파일경로" />	( / : 닫는표시 필수)
	<jsp:forward page="파일경로"></jsp:forward>
	
	# forward vs sendRedirect
		sendRedirect : 데이터 없이 단순이동. 주소창 URL 주소가 도착 페이지 주소임  
		forward : 데이터를 가지고 이동. 주소가 도착페이지 주소가 아님.


3. include 액션 태그
	: include 디렉티브 태그처럼 외부 파일 내용을 포함시키는 태그

	<jsp:includee page="파일명" flush="false" />

	flush : 외부파일로 제어가 이동할때 현재 JSP 페이지가 지금까지 출력버퍼에 저장된 결과를 처리.
		기본값 false, true로 설정하면 지금까지 출력버퍼에 저장된 내용을
		브라우저에 출력하고 출력버퍼를 비우겠다.
	
	include 디렉티브 태그 : 단수 코드 복붙

		처리시간 : 번역시 자원 포함
		기능 : 현재 페이지에 삽입
		데이터 전달 방법 : 페이지 내의 변수 선언 후 값 저장
		용도 : 다수의 jsp 페이지에서 공통으로 사용되는 코드나
			저작권 같은 문장을 포함하는 경우 사용
		정적페이지에 사용

	include 액션태그 : 외부파일 실행 된 후 현재 JSP 페이지로 제어를 변환시킴
			외부파일 처리 결과 내용을 포함

		처리시간 : 요청시 자원 포함
		기능 : 별도의 파일로 요청 처리 흐름을 이동
		데이터 전달 방법 : request 내장객체나 param 액션태그를 이용하여 전달
		용도 : 화면 레이아웃 일부분을 모듈화 할 때 주로 사용
		동적페이지에 사용

4. param 액션태그
	: 다른 페이지에 정보를 전달하는 태그
	단독 사용불가 , <jsp:forward나 <jsp:include 태그 내부에서 사용됨.
	전송할 값을 갯수 만큼 param태그 사용
		
	<jsp:foward page="파일명">
		<jsp:param name="파라미터이름" value="값" />
		......
	</jsp:forward>

	#1. include -> param
	#2. forward -> param

	* <jsp:param 액션태그는 파라미터를 이용해 데이터를 추가하기 때문에
	String 타입의 값만 전달 가능 (제약)
	-> 문자열이 아닌 객체 등을 전달하기 위해서는 param말고 다른 유용한 방법을 사용할 수 있다.
	
	* 내장객체의 속성 영역을 통해 데이터 공유

	[ 속성을 공유할 수 있는 내장객체의  유효 범위 ]

	영역		내장객체		유효범위
	----------------------------------------------------------------------------------------------------------
	page		pageContext	해당페이지가 클라이언트에게 서비스를 제공하는 동안 유효
	equest		equest		클라이언트 요청이 처리되는 동안유효
	session		session		세션이 유지되는 동안 유효
	application	application	웹 어플리케이션이 실행되고 있는 동안 유효
	----------------------------------------------------------------------------------------------------------


5 자바빈즈 JavaBeans
	: 로직을 담당하는 자바 코드를 따로 분리하여, 자바 클래스로 로직을 작성한 것

	브라우저  ---요청--->  jsp (html) <-----> 자바빈즈(로직) <------> 데이터베이스
		<---응답---

	1) 자바빈즈는 기존의 자바 클래스를 작성하는 방법과 동일하게 작성
		구성요소
			- 프로퍼티 : 변수
			- getter : 데이터 가져오는 메서드
			- setter : 데이터를 저장하는 메서드
		
		자바빈즈 작성 규칙
			1. 클래스는 java.io.Serializable 인터페이스를 구현해야함. (생략가능)
			2. 매개변수없는 기본생성자 필요
			3. 캡슐화로 작성. (변수 private)
			4. 모든 변수는 getter/setter 메서드가 존재해야한다.
		
		* getter/setter 작성방법
			접두어 get/set 에 변수명 첫글자 대문자 붙혀서 이름 짓기
			ex) String id ,	int age,		boolean finished
			     getId()	getAge()		isFinished()
			     setId(String id)	setAge(int age)	
				
		.. 나중에 하나씩 만들게 될 클래스들...
		Bean 	MemberBean	(데이터 담는용,로직)
		VO	MemberVO	(데이터 담는용)
		DTO	MemberDTO	(데이터 전달용)
		Action	MemberAction	(비지니스 로직처리해주는 클래스)

	2) useBean 액션태그 (객체 생성 태그)
		: JSP 페이지에서 자바빈즈를 사용하기 위해 실제 자바 클래스를 선언하고
		초기화 해주는 태그.
		new 자바빈즈클래스명();  와 같은 역할 (객체 생성)

		<jsp:useBean id="자바빈 식별이름" class="자바빈즈클래스전체명" [scope="범위"] />
		
		ex)
		<jsp:useBean id="member" class ="web.jsp03.test.Bean" />
		-> 자바로 비유하면 
		Bean member = (Bean)request.getAttribute("member");
		if(member==null){
			member = new Bean();
			request.setAttribute("member",member);
		}

		Bean member = new Bean();

		속성
		id : 자바의 레퍼런스 변수명의 역할
		class : 패키지이름을 포함한 자바클래스 전체명 기술. 
			기본 생성자 필요, 추상클래스 사용불가
		scope : 자바빈즈가 저장되는 영역을 설정. (생략가능)
			page, reqest, session, application 중 하나의 값으로 지정 


	3) setProperty 액션 태그
		: useBean 액션태그와 함께 자바빈즈의 setter 메서드에 접근하여
		자바빈즈의 변수인 프로퍼티값을 저장하는 태그.
		form페이지로 부터 전달되는 파라미터값을 꺼내어 직접 저장하거나 
		setProperty를 통해 값을 저장할 수 있다.

		<jsp:setProperty property="프로퍼티명" name="자바빈즈식별이름" value="값" />

		property : 프로퍼티명 = vo(dto)의 변수명과 동일하게 = form의 name속성값
			' * ' 이라고 하면 모든 프로퍼티를 뜻함 (전체 변수)

		name : useBean의 id 속성값.
		value : 프로퍼티에 저장할 값 지정해주는 속성

	4) getProperty 액션태그 : get 메서드 호출
		: 자바빈즈의 getter 호출하여 변수인 프로퍼티의 값을 가져오는 태그 (출력)
	
		<jsp:getProperty property="프로퍼티명" name="자바빈즈식별이름" />
		
		property : 자바빈즈의 변수명 (getProperty에서는 * 사용불가)
		name : useBean의 id 속성값
	
		
 
